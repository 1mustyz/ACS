/* eslint-disable: dot-location */

'use strict';

const stream = require('stream');
const chai = require('chai');
const sinon = require('sinon');
const expect = chai.expect;
const download = require('../index');

// mocking, spies, and stubs
chai.use(require('sinon-chai'));
require('mocha-sinon');

const dummy = 'http://example.com/file1.txt';

describe('gulp-download2', function () {
    let request;

    beforeEach(function () {
        request = sinon.spy(() => stream.Readable());
    });

    afterEach(function () {
        request = null;
    });

    it('returns a readable stream', function () {
        const isReadable = require('isstream').isReadable;
        expect(isReadable(download(dummy))).to.be.true;
    });

    it('passes a single URL from a string to hyperquest', function () {
        download(dummy).on('end', function () {
            console.log(request);

            expect(request).to.have.been.calledWith({
                url: dummy,
                encoding: null
            });
        });
    });
});
